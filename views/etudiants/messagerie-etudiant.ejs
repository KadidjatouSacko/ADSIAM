<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Messagerie | ADSIAM √âtudiant</title>
    <link rel="stylesheet" href="/css/messagerie-etudiant.css">
</head>
<body>
    <!-- Header -->
    <%- include('../partials/header-etudiant') %>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Page Header -->
        <section class="page-header fade-in">
            <h1 class="page-title">Messagerie üí¨</h1>
            <p class="page-subtitle">Communiquez avec vos formateurs et la communaut√© ADSIAM</p>
            
            <div class="messaging-stats">
                <div class="stat-item">
                    <span class="stat-number">3</span>
                    <span class="stat-label">Messages non lus</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">2</span>
                    <span class="stat-label">Formateurs actifs</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">15</span>
                    <span class="stat-label">Conversations</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">24h</span>
                    <span class="stat-label">R√©ponse moyenne</span>
                </div>
            </div>
        </section>

        <!-- Messaging Interface -->
        <div class="messaging-container fade-in">
            <!-- Sidebar with conversations -->
            <aside class="conversations-sidebar">
                <div class="sidebar-header">
                    <h2>Conversations</h2>
                    <button class="new-message-btn" onclick="startNewConversation()">‚úèÔ∏è</button>
                </div>
                
                <div class="search-conversations">
                    <input type="text" class="search-input" placeholder="üîç Rechercher conversations..." onkeyup="searchConversations(this.value)">
                </div>
                
                <div class="conversation-filters">
                    <button class="filter-btn active" onclick="filterConversations('all')">Toutes</button>
                    <button class="filter-btn" onclick="filterConversations('unread')">Non lues (3)</button>
                    <button class="filter-btn" onclick="filterConversations('formateurs')">Formateurs</button>
                    <button class="filter-btn" onclick="filterConversations('support')">Support</button>
                </div>
                
                <div class="conversations-list">
                    <!-- Conversation 1 - Unread -->
                    <div class="conversation-item unread active" data-conversation="rousseau" data-type="formateur">
                        <div class="conversation-avatar">
                            <img src="/images/avatar-rousseau.jpg" alt="Dr. Rousseau" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="avatar-fallback">DR</div>
                        </div>
                        <div class="conversation-content">
                            <div class="conversation-header">
                                <span class="conversation-name">Dr. Rousseau</span>
                                <span class="conversation-time">14:30</span>
                            </div>
                            <div class="conversation-preview">Excellents r√©sultats sur le dernier quiz ! Continuez...</div>
                            <div class="conversation-meta">
                                <span class="conversation-badge formateur">Formateur</span>
                                <span class="unread-count">2</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Conversation 2 - Unread -->
                    <div class="conversation-item unread" data-conversation="support" data-type="support">
                        <div class="conversation-avatar">
                            <div class="avatar-fallback support">üéß</div>
                        </div>
                        <div class="conversation-content">
                            <div class="conversation-header">
                                <span class="conversation-name">Support Technique</span>
                                <span class="conversation-time">12:15</span>
                            </div>
                            <div class="conversation-preview">Votre probl√®me de connexion a √©t√© r√©solu...</div>
                            <div class="conversation-meta">
                                <span class="conversation-badge support">Support</span>
                                <span class="unread-count">1</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Conversation 3 - Read -->
                    <div class="conversation-item" data-conversation="martin" data-type="formateur">
                        <div class="conversation-avatar">
                            <img src="/images/avatar-martin.jpg" alt="Dr. Martin" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="avatar-fallback">DM</div>
                        </div>
                        <div class="conversation-content">
                            <div class="conversation-header">
                                <span class="conversation-name">Dr. Martin</span>
                                <span class="conversation-time">Hier</span>
                            </div>
                            <div class="conversation-preview">Merci pour votre participation au webinaire...</div>
                            <div class="conversation-meta">
                                <span class="conversation-badge formateur">Formateur</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Conversation 4 - Group -->
                    <div class="conversation-item" data-conversation="groupe-hygiene" data-type="groupe">
                        <div class="conversation-avatar">
                            <div class="avatar-fallback groupe">üë•</div>
                        </div>
                        <div class="conversation-content">
                            <div class="conversation-header">
                                <span class="conversation-name">Groupe Hygi√®ne & S√©curit√©</span>
                                <span class="conversation-time">2 jours</span>
                            </div>
                            <div class="conversation-preview">Marie L. : J'ai une question sur les protocoles...</div>
                            <div class="conversation-meta">
                                <span class="conversation-badge groupe">Groupe (8)</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Conversation 5 - Admin -->
                    <div class="conversation-item" data-conversation="admin" data-type="admin">
                        <div class="conversation-avatar">
                            <div class="avatar-fallback admin">üè¢</div>
                        </div>
                        <div class="conversation-content">
                            <div class="conversation-header">
                                <span class="conversation-name">Administration ADSIAM</span>
                                <span class="conversation-time">3 jours</span>
                            </div>
                            <div class="conversation-preview">Nouvelle certification disponible...</div>
                            <div class="conversation-meta">
                                <span class="conversation-badge admin">Administration</span>
                            </div>
                        </div>
                    </div>
                </div>
            </aside>

            <!-- Main Chat Area -->
            <main class="chat-main">
                <!-- Chat Header -->
                <div class="chat-header">
                    <div class="chat-contact-info">
                        <div class="contact-avatar">
                            <img src="/images/avatar-rousseau.jpg" alt="Dr. Rousseau" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="avatar-fallback">DR</div>
                            <div class="online-indicator"></div>
                        </div>
                        <div class="contact-details">
                            <h3>Dr. Rousseau</h3>
                            <span class="contact-status">Formateur Principal ‚Ä¢ En ligne</span>
                        </div>
                    </div>
                    
                    <div class="chat-actions">
                        <button class="chat-action-btn" onclick="toggleChatInfo()" title="Informations">‚ÑπÔ∏è</button>
                        <button class="chat-action-btn" onclick="searchInChat()" title="Rechercher">üîç</button>
                        <button class="chat-action-btn" onclick="chatOptions()" title="Options">‚ãÆ</button>
                    </div>
                </div>

                <!-- Chat Messages -->
                <div class="chat-messages" id="chatMessages">
                    <!-- Message 1 - Received -->
                    <div class="message received">
                        <div class="message-avatar">
                            <img src="/images/avatar-rousseau.jpg" alt="Dr. Rousseau" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="avatar-fallback">DR</div>
                        </div>
                        <div class="message-content">
                            <div class="message-header">
                                <span class="message-sender">Dr. Rousseau</span>
                                <span class="message-time">Aujourd'hui 14:30</span>
                            </div>
                            <div class="message-body">
                                <p>Bonjour Sophie ! üëã</p>
                                <p>Je voulais vous f√©liciter pour vos excellents r√©sultats sur le quiz de communication. 95% c'est remarquable !</p>
                                <p>Avez-vous des questions sur le module suivant ?</p>
                            </div>
                            <div class="message-reactions">
                                <button class="reaction-btn" onclick="addReaction(this, 'üëç')">üëç</button>
                                <button class="reaction-btn" onclick="addReaction(this, '‚ù§Ô∏è')">‚ù§Ô∏è</button>
                                <button class="reaction-btn" onclick="addReaction(this, 'üôè')">üôè</button>
                            </div>
                        </div>
                    </div>

                    <!-- Message 2 - Sent -->
                    <div class="message sent">
                        <div class="message-content">
                            <div class="message-header">
                                <span class="message-time">Aujourd'hui 14:45</span>
                            </div>
                            <div class="message-body">
                                <p>Merci beaucoup Dr. Rousseau ! üòä</p>
                                <p>J'ai effectivement une question sur le module "Gestion des conflits". Comment g√©rer une situation o√π la famille n'est pas d'accord avec les soins propos√©s ?</p>
                            </div>
                            <div class="message-status">
                                <span class="status-icon">‚úì‚úì</span>
                                <span class="status-text">Lu</span>
                            </div>
                        </div>
                    </div>

                    <!-- Message 3 - Received with attachment -->
                    <div class="message received">
                        <div class="message-avatar">
                            <img src="/images/avatar-rousseau.jpg" alt="Dr. Rousseau" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="avatar-fallback">DR</div>
                        </div>
                        <div class="message-content">
                            <div class="message-header">
                                <span class="message-sender">Dr. Rousseau</span>
                                <span class="message-time">Aujourd'hui 15:10</span>
                            </div>
                            <div class="message-body">
                                <p>Excellente question ! üéØ</p>
                                <p>C'est exactement le type de situation qu'on aborde dans le module. La cl√© est l'√©coute active et la m√©diation.</p>
                                
                                <div class="message-attachment">
                                    <div class="attachment-icon">üìÑ</div>
                                    <div class="attachment-content">
                                        <span class="attachment-name">Guide_Gestion_Conflits_Familles.pdf</span>
                                        <span class="attachment-size">2.3 MB</span>
                                    </div>
                                    <button class="attachment-download" onclick="downloadAttachment('guide-conflits')">üì•</button>
                                </div>
                                
                                <p>Je vous envoie un guide compl√©mentaire. N'h√©sitez pas si vous avez d'autres questions !</p>
                            </div>
                        </div>
                    </div>

                    <!-- Message 4 - System message -->
                    <div class="message system">
                        <div class="system-content">
                            <span class="system-icon">üéì</span>
                            <span class="system-text">Vous avez obtenu votre certification "Communication & Relationnel"</span>
                            <span class="system-time">Hier 16:20</span>
                        </div>
                    </div>

                    <!-- Message 5 - Sent -->
                    <div class="message sent">
                        <div class="message-content">
                            <div class="message-header">
                                <span class="message-time">Hier 16:25</span>
                            </div>
                            <div class="message-body">
                                <p>Merci pour le document ! üìö</p>
                                <p>Et merci pour votre accompagnement pendant toute cette formation. Vos conseils m'ont beaucoup aid√©e.</p>
                                <p>J'ai h√¢te de commencer le module suivant ! üöÄ</p>
                            </div>
                            <div class="message-reactions">
                                <span class="reaction active" onclick="removeReaction(this)">‚ù§Ô∏è 1</span>
                            </div>
                            <div class="message-status">
                                <span class="status-icon">‚úì‚úì</span>
                                <span class="status-text">Lu</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Chat Input -->
                <div class="chat-input-container">
                    <div class="chat-input-area">
                        <button class="attachment-btn" onclick="addAttachment()" title="Joindre un fichier">üìé</button>
                        <textarea class="chat-input" placeholder="Tapez votre message..." rows="1" onkeypress="handleKeyPress(event)" oninput="autoResize(this)"></textarea>
                        <button class="emoji-btn" onclick="toggleEmojiPicker()" title="√âmojis">üòä</button>
                        <button class="send-btn" onclick="sendMessage()" title="Envoyer">üì§</button>
                    </div>
                    
                    <div class="input-actions">
                        <div class="typing-indicator" id="typingIndicator">
                            <span>Dr. Rousseau est en train d'√©crire...</span>
                        </div>
                    </div>
                </div>

                <!-- Emoji Picker (Hidden by default) -->
                <div class="emoji-picker" id="emojiPicker">
                    <div class="emoji-categories">
                        <button class="emoji-category active" onclick="showEmojiCategory('smileys')">üòä</button>
                        <button class="emoji-category" onclick="showEmojiCategory('gestures')">üëã</button>
                        <button class="emoji-category" onclick="showEmojiCategory('objects')">üìö</button>
                        <button class="emoji-category" onclick="showEmojiCategory('symbols')">‚úÖ</button>
                    </div>
                    <div class="emoji-grid" id="emojiGrid">
                        <span class="emoji" onclick="insertEmoji('üòä')">üòä</span>
                        <span class="emoji" onclick="insertEmoji('üòÑ')">üòÑ</span>
                        <span class="emoji" onclick="insertEmoji('üòç')">üòç</span>
                        <span class="emoji" onclick="insertEmoji('ü§î')">ü§î</span>
                        <span class="emoji" onclick="insertEmoji('üòÖ')">üòÖ</span>
                        <span class="emoji" onclick="insertEmoji('üôÇ')">üôÇ</span>
                        <span class="emoji" onclick="insertEmoji('üòâ')">üòâ</span>
                        <span class="emoji" onclick="insertEmoji('ü•∞')">ü•∞</span>
                        <span class="emoji" onclick="insertEmoji('üëç')">üëç</span>
                        <span class="emoji" onclick="insertEmoji('üëè')">üëè</span>
                        <span class="emoji" onclick="insertEmoji('üôè')">üôè</span>
                        <span class="emoji" onclick="insertEmoji('‚ù§Ô∏è')">‚ù§Ô∏è</span>
                    </div>
                </div>
            </aside>

            <!-- Chat Info Panel (Initially Hidden) -->
            <aside class="chat-info-panel" id="chatInfoPanel">
                <div class="info-header">
                    <h3>Informations</h3>
                    <button class="close-info-btn" onclick="toggleChatInfo()">‚úï</button>
                </div>
                
                <div class="contact-profile">
                    <div class="profile-avatar">
                        <img src="/images/avatar-rousseau.jpg" alt="Dr. Rousseau" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                        <div class="avatar-fallback">DR</div>
                    </div>
                    <div class="profile-info">
                        <h4>Dr. Anne Rousseau</h4>
                        <span class="profile-role">Formateur Principal</span>
                        <span class="profile-specialization">Sp√©cialiste en Premiers Secours & Urgences</span>
                    </div>
                </div>
                
                <div class="contact-details">
                    <div class="detail-item">
                        <span class="detail-label">üìß Email</span>
                        <span class="detail-value">a.rousseau@adsiam.fr</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">üì± Disponibilit√©</span>
                        <span class="detail-value">Lun-Ven 9h-18h</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">üéì Formations</span>
                        <span class="detail-value">Premiers Secours, Urgences</span>
                    </div>
                </div>
                
                <div class="conversation-actions">
                    <button class="action-btn" onclick="scheduleCall()">üìû Planifier un appel</button>
                    <button class="action-btn" onclick="reportIssue()">‚ö†Ô∏è Signaler un probl√®me</button>
                    <button class="action-btn danger" onclick="muteConversation()">üîï D√©sactiver notifications</button>
                </div>
                
                <div class="shared-files">
                    <h4>Fichiers partag√©s</h4>
                    <div class="file-item">
                        <span class="file-icon">üìÑ</span>
                        <span class="file-name">Guide_Gestion_Conflits_Familles.pdf</span>
                        <button class="file-download" onclick="downloadFile('guide-conflits')">üì•</button>
                    </div>
                    <div class="file-item">
                        <span class="file-icon">üìä</span>
                        <span class="file-name">Tableau_Scores_Formation.xlsx</span>
                        <button class="file-download" onclick="downloadFile('scores')">üì•</button>
                    </div>
                </div>
            </aside>
        </div>

        <!-- Notifications Panel -->
        <section class="notifications-panel fade-in">
            <div class="notifications-header">
                <h2>Notifications r√©centes üîî</h2>
                <button class="mark-all-read" onclick="markAllNotificationsRead()">Tout marquer lu</button>
            </div>
            
            <div class="notifications-list">
                <div class="notification-item unread">
                    <div class="notification-icon success">‚úÖ</div>
                    <div class="notification-content">
                        <span class="notification-title">Quiz r√©ussi avec brio !</span>
                        <span class="notification-description">Communication bienveillante - Score: 95%</span>
                        <span class="notification-time">Il y a 2 heures</span>
                    </div>
                    <button class="notification-action" onclick="viewQuizResults()">üìä Voir</button>
                </div>
                
                <div class="notification-item">
                    <div class="notification-icon info">üí¨</div>
                    <div class="notification-content">
                        <span class="notification-title">Nouveau message de Dr. Martin</span>
                        <span class="notification-description">Merci pour votre participation au webinaire</span>
                        <span class="notification-time">Hier 16:45</span>
                    </div>
                    <button class="notification-action" onclick="openConversation('martin')">üí¨ Lire</button>
                </div>
                
                <div class="notification-item">
                    <div class="notification-icon warning">‚ö†Ô∏è</div>
                    <div class="notification-content">
                        <span class="notification-title">√âch√©ance importante</span>
                        <span class="notification-description">√âvaluation Hygi√®ne & S√©curit√© - 18 janvier</span>
                        <span class="notification-time">Il y a 1 jour</span>
                    </div>
                    <button class="notification-action" onclick="goToEvaluation()">üìã R√©viser</button>
                </div>
                
                <div class="notification-item">
                    <div class="notification-icon formation">üéì</div>
                    <div class="notification-content">
                        <span class="notification-title">Certification disponible</span>
                        <span class="notification-description">Communication & Relationnel - Certificat pr√™t</span>
                        <span class="notification-time">Il y a 2 jours</span>
                    </div>
                    <button class="notification-action" onclick="downloadCertificate()">üì• T√©l√©charger</button>
                </div>
                
                <div class="notification-item">
                    <div class="notification-icon webinaire">üìπ</div>
                    <div class="notification-content">
                        <span class="notification-title">Webinaire programm√©</span>
                        <span class="notification-description">Gestion du stress - Demain 14h</span>
                        <span class="notification-time">Il y a 3 jours</span>
                    </div>
                    <button class="notification-action" onclick="joinWebinar()">üîó Rejoindre</button>
                </div>
            </div>
        </section>

        <!-- Quick Help -->
        <section class="quick-help fade-in">
            <div class="help-card">
                <h3>Aide rapide üí°</h3>
                <div class="help-items">
                    <div class="help-item">
                        <span class="help-icon">‚ùì</span>
                        <span class="help-text">Comment contacter un formateur ?</span>
                        <button class="help-btn" onclick="showHelp('contact-formateur')">Voir</button>
                    </div>
                    <div class="help-item">
                        <span class="help-icon">üì±</span>
                        <span class="help-text">Notifications push sur mobile</span>
                        <button class="help-btn" onclick="showHelp('notifications')">Config</button>
                    </div>
                    <div class="help-item">
                        <span class="help-icon">üîí</span>
                        <span class="help-text">Confidentialit√© des messages</span>
                        <button class="help-btn" onclick="showHelp('confidentialite')">Info</button>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <%- include('../partials/footer') %>

    <script>
        let currentConversation = 'rousseau';
        let isEmojiPickerOpen = false;
        let isChatInfoOpen = false;

        // Conversation management
        function selectConversation(conversationId) {
            // Remove active class from all conversations
            document.querySelectorAll('.conversation-item').forEach(item => {
                item.classList.remove('active');
            });
            
            // Add active class to selected conversation
            document.querySelector(`[data-conversation="${conversationId}"]`).classList.add('active');
            
            // Update chat header and messages
            currentConversation = conversationId;
            loadConversationMessages(conversationId);
        }

        function loadConversationMessages(conversationId) {
            const chatMessages = document.getElementById('chatMessages');
            const chatHeader = document.querySelector('.chat-header');
            
            // Simulate loading different conversations
            if (conversationId === 'support') {
                updateChatHeader('Support Technique', '√âquipe Support ‚Ä¢ En ligne', 'üéß');
                loadSupportMessages();
            } else if (conversationId === 'martin') {
                updateChatHeader('Dr. Martin', 'Formateur ‚Ä¢ Hors ligne', 'DM');
                loadMartinMessages();
            } else if (conversationId === 'groupe-hygiene') {
                updateChatHeader('Groupe Hygi√®ne & S√©curit√©', '8 participants ‚Ä¢ 3 en ligne', 'üë•');
                loadGroupMessages();
            }
            // Default conversation (Dr. Rousseau) is already loaded
        }

        function updateChatHeader(name, status, avatar) {
            const nameElement = document.querySelector('.contact-details h3');
            const statusElement = document.querySelector('.contact-status');
            const avatarElement = document.querySelector('.contact-avatar .avatar-fallback');
            
            nameElement.textContent = name;
            statusElement.textContent = status;
            avatarElement.textContent = avatar;
        }

        function loadSupportMessages() {
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.innerHTML = `
                <div class="message received">
                    <div class="message-avatar">
                        <div class="avatar-fallback support">üéß</div>
                    </div>
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-sender">Support Technique</span>
                            <span class="message-time">Aujourd'hui 12:15</span>
                        </div>
                        <div class="message-body">
                            <p>Bonjour Sophie,</p>
                            <p>Votre probl√®me de connexion √† la plateforme a √©t√© r√©solu. Le serveur avait une maintenance programm√©e.</p>
                            <p>Vous devriez maintenant pouvoir acc√©der √† tous vos modules sans difficult√©.</p>
                            <p>N'h√©sitez pas √† nous recontacter si vous rencontrez d'autres probl√®mes !</p>
                        </div>
                    </div>
                </div>
                
                <div class="message sent">
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-time">Aujourd'hui 12:20</span>
                        </div>
                        <div class="message-body">
                            <p>Parfait, merci beaucoup ! üòä</p>
                            <p>Tout fonctionne bien maintenant. Votre r√©activit√© est impressionnante !</p>
                        </div>
                        <div class="message-status">
                            <span class="status-icon">‚úì‚úì</span>
                            <span class="status-text">Lu</span>
                        </div>
                    </div>
                </div>
            `;
        }

        function loadMartinMessages() {
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.innerHTML = `
                <div class="message received">
                    <div class="message-avatar">
                        <div class="avatar-fallback">DM</div>
                    </div>
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-sender">Dr. Martin</span>
                            <span class="message-time">Hier 16:30</span>
                        </div>
                        <div class="message-body">
                            <p>Bonjour Sophie,</p>
                            <p>Merci pour votre excellente participation au webinaire sur la gestion du stress.</p>
                            <p>Vos questions √©taient tr√®s pertinentes et ont enrichi la discussion pour tous les participants.</p>
                            <p>Le prochain webinaire aura lieu demain √† 14h. J'esp√®re vous y retrouver ! üòä</p>
                        </div>
                    </div>
                </div>
                
                <div class="message sent">
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-time">Hier 17:00</span>
                        </div>
                        <div class="message-body">
                            <p>Merci Dr. Martin ! üôè</p>
                            <p>C'√©tait tr√®s enrichissant. Je serai pr√©sente demain sans faute.</p>
                            <p>Pouvez-vous m'envoyer les slides de la pr√©sentation ?</p>
                        </div>
                        <div class="message-status">
                            <span class="status-icon">‚úì‚úì</span>
                            <span class="status-text">Lu</span>
                        </div>
                    </div>
                </div>
            `;
        }

        function loadGroupMessages() {
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.innerHTML = `
                <div class="message received group">
                    <div class="message-avatar">
                        <div class="avatar-fallback">ML</div>
                    </div>
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-sender">Marie L.</span>
                            <span class="message-time">Il y a 2 jours</span>
                        </div>
                        <div class="message-body">
                            <p>Salut tout le monde ! üëã</p>
                            <p>J'ai une question sur les protocoles de d√©sinfection. Est-ce qu'on utilise le m√™me produit pour toutes les surfaces ?</p>
                        </div>
                    </div>
                </div>
                
                <div class="message received group">
                    <div class="message-avatar">
                        <div class="avatar-fallback">JD</div>
                    </div>
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-sender">Jean D.</span>
                            <span class="message-time">Il y a 2 jours</span>
                        </div>
                        <div class="message-body">
                            <p>Excellente question Marie ! ü§î</p>
                            <p>D'apr√®s ce que j'ai compris dans le module 2, il faut adapter selon le type de surface et le niveau de contamination.</p>
                        </div>
                    </div>
                </div>
                
                <div class="message sent group">
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-time">Il y a 2 jours</span>
                        </div>
                        <div class="message-body">
                            <p>Je suis d'accord avec Jean ! üëç</p>
                            <p>Le tableau de la page 15 du module explique bien les diff√©rents protocoles selon les zones (WC, cuisine, chambre...).</p>
                        </div>
                        <div class="message-status">
                            <span class="status-icon">‚úì‚úì</span>
                            <span class="status-text">Lu par 5</span>
                        </div>
                    </div>
                </div>
            `;
        }

        // Click handlers for conversation items
        document.querySelectorAll('.conversation-item').forEach(item => {
            item.addEventListener('click', function() {
                const conversationId = this.dataset.conversation;
                selectConversation(conversationId);
                
                // Mark as read
                this.classList.remove('unread');
                const unreadCount = this.querySelector('.unread-count');
                if (unreadCount) {
                    unreadCount.remove();
                }
            });
        });

        // Message input functionality
        function handleKeyPress(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        }

        function autoResize(textarea) {
            textarea.style.height = 'auto';
            textarea.style.height = textarea.scrollHeight + 'px';
        }

        function sendMessage() {
            const input = document.querySelector('.chat-input');
            const messageText = input.value.trim();
            
            if (messageText === '') return;
            
            // Create new message element
            const messagesContainer = document.getElementById('chatMessages');
            const now = new Date();
            const timeString = now.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' });
            
            const messageHTML = `
                <div class="message sent">
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-time">Aujourd'hui ${timeString}</span>
                        </div>
                        <div class="message-body">
                            <p>${messageText}</p>
                        </div>
                        <div class="message-status">
                            <span class="status-icon">‚úì</span>
                            <span class="status-text">Envoy√©</span>
                        </div>
                    </div>
                </div>
            `;
            
            messagesContainer.insertAdjacentHTML('beforeend', messageHTML);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
            
            input.value = '';
            input.style.height = 'auto';
            
            // Simulate response
            setTimeout(() => {
                simulateResponse();
            }, 2000);
        }

        function simulateResponse() {
            const messagesContainer = document.getElementById('chatMessages');
            const responses = [
                "Merci pour votre message ! Je vais regarder cela et vous r√©pondre dans les plus brefs d√©lais.",
                "Excellente question ! Cela m√©rite une r√©ponse d√©taill√©e que je vais pr√©parer.",
                "Je vous remercie pour votre retour. C'est toujours un plaisir d'accompagner des √©tudiants motiv√©s comme vous !"
            ];
            
            const randomResponse = responses[Math.floor(Math.random() * responses.length)];
            const now = new Date();
            const timeString = now.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' });
            
            const responseHTML = `
                <div class="message received">
                    <div class="message-avatar">
                        <div class="avatar-fallback">DR</div>
                    </div>
                    <div class="message-content">
                        <div class="message-header">
                            <span class="message-sender">Dr. Rousseau</span>
                            <span class="message-time">Aujourd'hui ${timeString}</span>
                        </div>
                        <div class="message-body">
                            <p>${randomResponse}</p>
                        </div>
                    </div>
                </div>
            `;
            
            messagesContainer.insertAdjacentHTML('beforeend', responseHTML);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        // Emoji functionality
        function toggleEmojiPicker() {
            const emojiPicker = document.getElementById('emojiPicker');
            isEmojiPickerOpen = !isEmojiPickerOpen;
            emojiPicker.style.display = isEmojiPickerOpen ? 'block' : 'none';
        }

        function insertEmoji(emoji) {
            const input = document.querySelector('.chat-input');
            const cursorPos = input.selectionStart;
            const textBefore = input.value.substring(0, cursorPos);
            const textAfter = input.value.substring(cursorPos);
            
            input.value = textBefore + emoji + textAfter;
            input.focus();
            input.setSelectionRange(cursorPos + emoji.length, cursorPos + emoji.length);
            
            toggleEmojiPicker();
        }

        function showEmojiCategory(category) {
            const buttons = document.querySelectorAll('.emoji-category');
            const emojiGrid = document.getElementById('emojiGrid');
            
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            const emojiCategories = {
                'smileys': ['üòä', 'üòÑ', 'üòç', 'ü§î', 'üòÖ', 'üôÇ', 'üòâ', 'ü•∞', 'üòá', 'ü§ó', 'üòã', 'üòé'],
                'gestures': ['üëç', 'üëè', 'üôè', 'üëã', '‚úã', 'üëå', '‚úåÔ∏è', 'ü§ù', 'üí™', 'ü§≤', 'üëê', 'üôå'],
                'objects': ['üìö', 'üìñ', 'üìù', 'üìä', 'üìÖ', 'üíª', 'üì±', 'üéì', 'üìã', 'üìÑ', 'üìÅ', '‚úèÔ∏è'],
                'symbols': ['‚úÖ', '‚ùå', '‚ö†Ô∏è', '‚ùì', '‚ùó', 'üîî', '‚≠ê', 'üéØ', 'üí°', 'üî•', '‚ö°', 'üöÄ']
            };
            
            emojiGrid.innerHTML = emojiCategories[category].map(emoji => 
                `<span class="emoji" onclick="insertEmoji('${emoji}')">${emoji}</span>`
            ).join('');
        }

        // Chat info panel
        function toggleChatInfo() {
            const infoPanel = document.getElementById('chatInfoPanel');
            isChatInfoOpen = !isChatInfoOpen;
            infoPanel.classList.toggle('active');
        }

        // Filter conversations
        function filterConversations(filter) {
            const filterButtons = document.querySelectorAll('.filter-btn');
            const conversations = document.querySelectorAll('.conversation-item');
            
            filterButtons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            conversations.forEach(conv => {
                conv.style.display = 'flex';
                
                if (filter === 'unread' && !conv.classList.contains('unread')) {
                    conv.style.display = 'none';
                } else if (filter === 'formateurs' && conv.dataset.type !== 'formateur') {
                    conv.style.display = 'none';
                } else if (filter === 'support' && conv.dataset.type !== 'support') {
                    conv.style.display = 'none';
                }
            });
        }

        // Search functionality
        function searchConversations(query) {
            const conversations = document.querySelectorAll('.conversation-item');
            
            conversations.forEach(conv => {
                const name = conv.querySelector('.conversation-name').textContent.toLowerCase();
                const preview = conv.querySelector('.conversation-preview').textContent.toLowerCase();
                
                if (name.includes(query.toLowerCase()) || preview.includes(query.toLowerCase())) {
                    conv.style.display = 'flex';
                } else {
                    conv.style.display = query === '' ? 'flex' : 'none';
                }
            });
        }

        // Action functions
        function startNewConversation() {
            alert('‚úèÔ∏è Nouvelle conversation\n\nüë®‚Äçüè´ Contacter un formateur\nüéß Support technique\nüë• Cr√©er un groupe d\'√©tude\nüè¢ Administration\n\nüìù Choisissez le type de conversation √† d√©marrer');
        }

        function addAttachment() {
            alert('üìé Joindre un fichier\n\nüìÑ Documents (PDF, Word, Excel)\nüñºÔ∏è Images (JPG, PNG, GIF)\nüé• Vid√©os (MP4, AVI)\nüìä Pr√©sentations (PowerPoint)\n\nTaille max: 10MB\n\nüì§ S√©lectionner le fichier √† joindre');
        }

        function downloadAttachment(attachmentId) {
            alert('üì• T√©l√©chargement en cours...\n\nFichier: Guide_Gestion_Conflits_Familles.pdf\nTaille: 2.3 MB\n\nüíæ Le fichier sera t√©l√©charg√© dans votre dossier "T√©l√©chargements"\nüìö Document ajout√© √† votre biblioth√®que de ressources');
        }

        function addReaction(button, emoji) {
            const reactionsContainer = button.parentElement;
            const existingReaction = reactionsContainer.querySelector('.reaction.active');
            
            if (existingReaction) {
                existingReaction.remove();
            }
            
            const reactionElement = document.createElement('span');
            reactionElement.className = 'reaction active';
            reactionElement.textContent = `${emoji} 1`;
            reactionElement.onclick = () => removeReaction(reactionElement);
            
            reactionsContainer.appendChild(reactionElement);
        }

        function removeReaction(reactionElement) {
            reactionElement.remove();
        }

        // Notification functions
        function markAllNotificationsRead() {
            document.querySelectorAll('.notification-item.unread').forEach(notification => {
                notification.classList.remove('unread');
            });
            alert('‚úÖ Toutes les notifications ont √©t√© marqu√©es comme lues');
        }

        function viewQuizResults() {
            alert('üìä R√©sultats du quiz\n\nFormation: Communication bienveillante\nScore: 95% (19/20)\nTemps: 12 minutes\nRang: 2e/45 √©tudiants\n\nüéØ Excellente performance !\nüìö Acc√©der au module suivant');
        }

        function openConversation(conversationId) {
            selectConversation(conversationId);
            alert('üí¨ Ouverture de la conversation...\n\nConversation charg√©e avec succ√®s');
        }

        function scheduleCall() {
            alert('üìû Planifier un appel\n\nüìÖ Choisir un cr√©neau\n‚è∞ Dur√©e (15min, 30min, 1h)\nüí¨ Sujet de l\'appel\nüìß Confirmation par email\n\n‚úÖ Demande d\'appel envoy√©e au formateur');
        }

        function reportIssue() {
            alert('‚ö†Ô∏è Signaler un probl√®me\n\nüìù Type de probl√®me\nüìÑ Description d√©taill√©e\nüìé Joindre des captures\nüè∑Ô∏è Priorit√©\n\nüìß Votre signalement sera trait√© sous 24h');
        }

        function muteConversation() {
            alert('üîï D√©sactiver les notifications\n\n‚è∞ Dur√©e (1h, 8h, 24h, permanent)\nüì± Type (push, email, SMS)\nüîî Exceptions (urgences)\n\n‚úÖ Notifications d√©sactiv√©es pour cette conversation');
        }

        // Animation functions
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animation = 'fadeInUp 0.6s ease forwards';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.fade-in').forEach(el => {
            observer.observe(el);
        });

        // Auto-scroll chat to bottom
        function scrollChatToBottom() {
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Simulate typing indicator
        function showTypingIndicator() {
            const indicator = document.getElementById('typingIndicator');
            indicator.style.display = 'block';
            
            setTimeout(() => {
                indicator.style.display = 'none';
            }, 3000);
        }

        // Initialize
        window.addEventListener('load', () => {
            scrollChatToBottom();
            console.log('üí¨ Page Messagerie ADSIAM charg√©e');
            console.log('üë• 15 conversations actives');
            console.log('üìß 3 messages non lus');
            console.log('üîî Notifications en temps r√©el activ√©es');
            
            // Simulate typing indicator occasionally
            setInterval(() => {
                if (Math.random() < 0.1) { // 10% chance every 30 seconds
                    showTypingIndicator();
                }
            }, 30000);
        });

        // Close emoji picker when clicking outside
        document.addEventListener('click', function(event) {
            const emojiPicker = document.getElementById('emojiPicker');
            const emojiBtn = document.querySelector('.emoji-btn');
            
            if (!emojiPicker.contains(event.target) && !emojiBtn.contains(event.target)) {
                emojiPicker.style.display = 'none';
                isEmojiPickerOpen = false;
            }
        });

        // Help functions
        function showHelp(helpType) {
            const helpTexts = {
                'contact-formateur': 'Pour contacter un formateur:\n\n1. Cliquez sur "‚úèÔ∏è Nouvelle conversation"\n2. S√©lectionnez "üë®‚Äçüè´ Contacter un formateur"\n3. Choisissez le formateur selon votre formation\n4. R√©digez votre message\n\n‚è∞ R√©ponse sous 24h en moyenne',
                'notifications': 'Configuration des notifications:\n\nüì± Notifications push sur mobile\nüìß Alertes par email\nüí¨ Messages en temps r√©el\n‚ö†Ô∏è √âch√©ances importantes\n\n‚öôÔ∏è Personnalisez dans Param√®tres > Notifications',
                'confidentialite': 'Confidentialit√© et s√©curit√©:\n\nüîí Messages chiffr√©s de bout en bout\nüëÄ Seuls vous et le destinataire peuvent lire\nüóëÔ∏è Suppression automatique apr√®s 1 an\nüõ°Ô∏è Donn√©es conformes RGPD\n\n‚úÖ Vos √©changes sont parfaitement s√©curis√©s'
            };
            
            alert(helpTexts[helpType]);
        }
    </script>
</body>
</html>
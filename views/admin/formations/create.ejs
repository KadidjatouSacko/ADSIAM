<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cr√©er une nouvelle formation - ADSIAM Admin</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-pink: #e7a6b7;
            --primary-blue: #a5bfd4;
            --light-pink: #fce8ec;
            --light-blue: #e8f3f8;
            --soft-gray: #f5f5f7;
            --text-dark: #2f2f2f;
            --text-light: #6f6f6f;
            --white: #ffffff;
            --success: #28a745;
            --danger: #dc3545;
            --warning: #ffc107;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--soft-gray);
            line-height: 1.6;
            color: var(--text-dark);
        }

        .admin-layout {
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            width: 280px;
            background: var(--text-dark);
            color: white;
            padding: 2rem 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
        }

        .sidebar-header {
            padding: 0 2rem 2rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar-header h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary-pink);
        }

        .sidebar-menu {
            list-style: none;
            padding: 2rem 0;
        }

        .sidebar-menu li {
            margin-bottom: 0.5rem;
        }

        .sidebar-menu a {
            display: block;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            padding: 1rem 2rem;
            transition: all 0.3s;
            font-weight: 500;
        }

        .sidebar-menu a:hover,
        .sidebar-menu a.active {
            background: var(--primary-blue);
            color: white;
        }

        .main-content {
            margin-left: 280px;
            flex: 1;
            padding: 2rem;
            background: var(--soft-gray);
        }

        .content-header {
            background: white;
            padding: 2rem;
            border-radius: 20px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .content-header h1 {
            font-size: 2rem;
            font-weight: 600;
            color: var(--text-dark);
        }

        .form-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            overflow: hidden;
        }

        .form-tabs {
            display: flex;
            background: var(--soft-gray);
            padding: 0.5rem;
            border-radius: 15px 15px 0 0;
        }

        .form-tab {
            flex: 1;
            padding: 1rem 2rem;
            background: transparent;
            border: none;
            cursor: pointer;
            font-weight: 600;
            color: var(--text-light);
            border-radius: 10px;
            transition: all 0.3s;
        }

        .form-tab.active {
            background: white;
            color: var(--primary-blue);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .tab-content {
            display: none;
            padding: 3rem;
        }

        .tab-content.active {
            display: block;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid var(--soft-gray);
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

        .form-section h3 {
            font-size: 1.4rem;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-dark);
        }

        .form-label.required::after {
            content: ' *';
            color: var(--danger);
        }

        .form-input,
        .form-textarea,
        .form-select {
            width: 100%;
            padding: 1rem;
            border: 2px solid var(--soft-gray);
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s;
            font-family: inherit;
        }

        .form-input:focus,
        .form-textarea:focus,
        .form-select:focus {
            outline: none;
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(165, 191, 212, 0.1);
        }

        .form-textarea {
            min-height: 120px;
            resize: vertical;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-pink), var(--primary-blue));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .btn-secondary {
            background: var(--soft-gray);
            color: var(--text-dark);
        }

        .btn-success {
            background: var(--success);
            color: white;
        }

        .btn-danger {
            background: var(--danger);
            color: white;
        }

        .btn-small {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }

        /* Modules Builder */
        .modules-builder {
            margin-top: 2rem;
        }

        .module-item {
            background: var(--light-blue);
            border-radius: 15px;
            margin-bottom: 2rem;
            overflow: hidden;
            border: 2px solid transparent;
            transition: all 0.3s;
        }

        .module-item:hover {
            border-color: var(--primary-blue);
        }

        .module-header {
            background: var(--primary-blue);
            color: white;
            padding: 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .module-title {
            font-weight: 600;
            font-size: 1.1rem;
        }

        .module-controls {
            display: flex;
            gap: 0.5rem;
        }

        .module-content {
            padding: 2rem;
            display: none;
        }

        .module-content.expanded {
            display: block;
        }

        .partie-item {
            background: white;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            border: 1px solid var(--soft-gray);
            overflow: hidden;
        }

        .partie-header {
            background: var(--light-pink);
            padding: 1rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .partie-content {
            padding: 1.5rem;
            display: none;
        }

        .partie-content.expanded {
            display: block;
        }

        .content-type-selector {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .content-type-btn {
            padding: 0.8rem 1.5rem;
            border: 2px solid var(--soft-gray);
            background: white;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 500;
        }

        .content-type-btn.active {
            border-color: var(--primary-blue);
            background: var(--light-blue);
            color: var(--primary-blue);
        }

        .content-item {
            background: var(--soft-gray);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border: 1px dashed var(--text-light);
        }

        .video-upload {
            border: 2px dashed var(--primary-blue);
            background: var(--light-blue);
            padding: 2rem;
            text-align: center;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .video-upload:hover {
            background: var(--primary-blue);
            color: white;
        }

        .video-upload input[type="file"] {
            display: none;
        }

        .quiz-builder {
            background: var(--light-pink);
            border-radius: 10px;
            padding: 2rem;
        }

        .question-item {
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border: 1px solid var(--soft-gray);
        }

        .answer-options {
            margin-top: 1rem;
        }

        .answer-option {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 0.8rem;
            padding: 0.8rem;
            background: var(--soft-gray);
            border-radius: 6px;
        }

        .answer-option input[type="checkbox"] {
            width: 20px;
            height: 20px;
        }

        .file-list {
            margin-top: 1rem;
        }

        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.8rem;
            background: white;
            border-radius: 6px;
            margin-bottom: 0.5rem;
            border: 1px solid var(--soft-gray);
        }

        .form-actions {
            padding: 2rem 3rem;
            background: var(--soft-gray);
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
        }

        .collapse-toggle {
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 4px;
            transition: all 0.3s;
        }

        .collapse-toggle:hover {
            background: rgba(255,255,255,0.1);
        }

        .drag-handle {
            cursor: move;
            color: var(--text-light);
            margin-right: 0.5rem;
        }

        .sortable-ghost {
            opacity: 0.5;
        }

        .preview-section {
            background: var(--light-blue);
            border-radius: 10px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .preview-module {
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border-left: 4px solid var(--primary-blue);
        }

        .progress-indicator {
            background: var(--soft-gray);
            height: 4px;
            border-radius: 2px;
            margin-bottom: 2rem;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(135deg, var(--primary-pink), var(--primary-blue));
            width: 33%;
            transition: width 0.3s ease;
        }

        @media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
                z-index: 1000;
            }

            .main-content {
                margin-left: 0;
            }

            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="admin-layout">
        <!-- Sidebar -->
        <nav class="sidebar">
            <div class="sidebar-header">
                <h2>ADSIAM Admin</h2>
            </div>
            <ul class="sidebar-menu">
                <li><a href="/admin">üìä Tableau de bord</a></li>
                <li><a href="/admin/utilisateurs">üë• Utilisateurs</a></li>
                <li><a href="/admin/formations" class="active">üìö Formations</a></li>
                <li><a href="/admin/inscriptions">üìù Inscriptions</a></li>
                <li><a href="/admin/evenements">üìÖ √âv√©nements</a></li>
                <li><a href="/admin/rapports">üìä Rapports</a></li>
                <li><a href="/admin/messagerie">üí¨ Messagerie</a></li>
                <li><a href="/admin/parametres">‚öôÔ∏è Param√®tres</a></li>
            </ul>
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-header">
                <h1>Cr√©er une nouvelle formation</h1>
                <a href="/admin/formations" class="btn btn-secondary">‚Üê Retour √† la liste</a>
            </div>

            <div class="progress-indicator">
                <div class="progress-bar" id="progressBar"></div>
            </div>

            <form id="formationForm" class="form-container">
                <!-- Form Tabs -->
                <div class="form-tabs">
                    <button type="button" class="form-tab active" data-tab="basic">
                        üìù Informations g√©n√©rales
                    </button>
                    <button type="button" class="form-tab" data-tab="modules">
                        üìö Modules et contenu
                    </button>
                    <button type="button" class="form-tab" data-tab="preview">
                        üëÅÔ∏è Aper√ßu
                    </button>
                </div>

                <!-- Tab 1: Informations g√©n√©rales -->
                <div class="tab-content active" id="basic">
                    <div class="form-section">
                        <h3>üìã Informations de base</h3>
                        
                        <div class="form-group">
                            <label for="titre" class="form-label required">Titre de la formation</label>
                            <input type="text" id="titre" name="titre" class="form-input" required>
                        </div>

                        <div class="form-group">
                            <label for="description" class="form-label required">Description</label>
                            <textarea id="description" name="description" class="form-textarea" rows="4" required></textarea>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="domaine" class="form-label required">Domaine</label>
                                <select id="domaine" name="domaine" class="form-select" required>
                                    <option value="">S√©lectionner un domaine</option>
                                    <option value="communication">Communication</option>
                                    <option value="hygiene">Hygi√®ne & S√©curit√©</option>
                                    <option value="ergonomie">Ergonomie</option>
                                    <option value="urgences">Urgences</option>
                                    <option value="nutrition">Nutrition</option>
                                    <option value="pathologies">Pathologies</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="niveau" class="form-label required">Niveau</label>
                                <select id="niveau" name="niveau" class="form-select" required>
                                    <option value="">S√©lectionner un niveau</option>
                                    <option value="debutant">D√©butant</option>
                                    <option value="intermediaire">Interm√©diaire</option>
                                    <option value="avance">Avanc√©</option>
                                    <option value="expert">Expert</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="prix" class="form-label">Prix (‚Ç¨)</label>
                                <input type="number" id="prix" name="prix" class="form-input" min="0" step="0.01">
                            </div>
                            <div class="form-group">
                                <label for="icone" class="form-label">Ic√¥ne (emoji)</label>
                                <input type="text" id="icone" name="icone" class="form-input" maxlength="2" placeholder="üó£Ô∏è">
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">Options</label>
                            <div style="display: flex; flex-wrap: wrap; gap: 1rem;">
                                <label style="display: flex; align-items: center; gap: 0.5rem;">
                                    <input type="checkbox" name="gratuit" value="true">
                                    Formation gratuite
                                </label>
                                <label style="display: flex; align-items: center; gap: 0.5rem;">
                                    <input type="checkbox" name="populaire" value="true">
                                    Formation populaire
                                </label>
                                <label style="display: flex; align-items: center; gap: 0.5rem;">
                                    <input type="checkbox" name="certifiant" value="true">
                                    Formation certifiante
                                </label>
                                <label style="display: flex; align-items: center; gap: 0.5rem;">
                                    <input type="checkbox" name="actif" value="true" checked>
                                    Formation active
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Tab 2: Modules et contenu -->
                <div class="tab-content" id="modules">
                    <div class="form-section">
                        <h3>üìö Structure de la formation</h3>
                        <button type="button" class="btn btn-success" onclick="ajouterModule()">
                            ‚ûï Ajouter un module
                        </button>
                        
                        <div class="modules-builder" id="modulesContainer">
                            <!-- Les modules seront ajout√©s ici dynamiquement -->
                        </div>
                    </div>
                </div>

                <!-- Tab 3: Aper√ßu -->
                <div class="tab-content" id="preview">
                    <div class="form-section">
                        <h3>üëÅÔ∏è Aper√ßu de la formation</h3>
                        <div class="preview-section" id="previewContent">
                            <p>Configurez d'abord les informations de base et les modules pour voir l'aper√ßu.</p>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="sauvegarderBrouillon()">
                        üíæ Sauvegarder en brouillon
                    </button>
                    <button type="submit" class="btn btn-primary">
                        ‚úÖ Cr√©er la formation
                    </button>
                </div>
            </form>
        </main>
    </div>

    <script>
        let moduleCounter = 0;
        let partieCounter = 0;
        let questionCounter = 0;

        // Gestion des onglets
        document.querySelectorAll('.form-tab').forEach(tab => {
            tab.addEventListener('click', () => {
                const targetTab = tab.dataset.tab;
                
                // D√©sactiver tous les onglets
                document.querySelectorAll('.form-tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                
                // Activer l'onglet s√©lectionn√©
                tab.classList.add('active');
                document.getElementById(targetTab).classList.add('active');
                
                // Mettre √† jour la barre de progression
                updateProgressBar(targetTab);
                
                // G√©n√©rer l'aper√ßu si on va sur l'onglet preview
                if (targetTab === 'preview') {
                    genererApercu();
                }
            });
        });

        function updateProgressBar(tab) {
            const progressBar = document.getElementById('progressBar');
            switch(tab) {
                case 'basic':
                    progressBar.style.width = '33%';
                    break;
                case 'modules':
                    progressBar.style.width = '66%';
                    break;
                case 'preview':
                    progressBar.style.width = '100%';
                    break;
            }
        }

        function ajouterModule() {
            moduleCounter++;
            const moduleHtml = `
                <div class="module-item" data-module-id="${moduleCounter}">
                    <div class="module-header" onclick="toggleModule(${moduleCounter})">
                        <div class="module-title">
                            <span class="drag-handle">‚ãÆ‚ãÆ</span>
                            <span>Module ${moduleCounter}</span>
                        </div>
                        <div class="module-controls">
                            <button type="button" class="collapse-toggle">‚ñº</button>
                            <button type="button" class="btn btn-danger btn-small" onclick="supprimerModule(${moduleCounter})">üóëÔ∏è</button>
                        </div>
                    </div>
                    <div class="module-content" id="module-${moduleCounter}">
                        <div class="form-group">
                            <label class="form-label required">Titre du module</label>
                            <input type="text" class="form-input" name="modules[${moduleCounter}][titre]" 
                                   placeholder="Ex: Introduction √† la communication professionnelle" required>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Description</label>
                            <textarea class="form-textarea" name="modules[${moduleCounter}][description]" 
                                      placeholder="Description du module..."></textarea>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Dur√©e (minutes)</label>
                                <input type="number" class="form-input" name="modules[${moduleCounter}][duree]" min="1">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Ordre</label>
                                <input type="number" class="form-input" name="modules[${moduleCounter}][ordre]" value="${moduleCounter}">
                            </div>
                        </div>
                        
                        <h4 style="margin: 2rem 0 1rem; color: var(--primary-blue);">üìë Parties du module</h4>
                        <button type="button" class="btn btn-success btn-small" onclick="ajouterPartie(${moduleCounter})">
                            ‚ûï Ajouter une partie
                        </button>
                        
                        <div class="parties-container" id="parties-${moduleCounter}">
                            <!-- Les parties seront ajout√©es ici -->
                        </div>
                    </div>
                </div>
            `;
            
            document.getElementById('modulesContainer').insertAdjacentHTML('beforeend', moduleHtml);
        }

        function ajouterPartie(moduleId) {
            partieCounter++;
            const partieHtml = `
                <div class="partie-item" data-partie-id="${partieCounter}">
                    <div class="partie-header" onclick="togglePartie(${partieCounter})">
                        <div><span class="drag-handle">‚ãÆ‚ãÆ</span> Partie ${partieCounter}</div>
                        <div>
                            <button type="button" class="btn btn-danger btn-small" onclick="supprimerPartie(${partieCounter})">üóëÔ∏è</button>
                        </div>
                    </div>
                    <div class="partie-content" id="partie-${partieCounter}">
                        <div class="form-group">
                            <label class="form-label required">Titre de la partie</label>
                            <input type="text" class="form-input" name="modules[${moduleId}][parties][${partieCounter}][titre]" 
                                   placeholder="Ex: R√¥le et enjeux de la communication" required>
                        </div>
                        
                        <div class="content-type-selector">
                            <button type="button" class="content-type-btn active" onclick="selectContentType(${partieCounter}, 'video')">
                                üé• Vid√©o
                            </button>
                            <button type="button" class="content-type-btn" onclick="selectContentType(${partieCounter}, 'quiz')">
                                ‚ùì Quiz
                            </button>
                            <button type="button" class="content-type-btn" onclick="selectContentType(${partieCounter}, 'document')">
                                üìÑ Document
                            </button>
                        </div>
                        
                        <!-- Contenu vid√©o -->
                        <div class="content-section active" id="video-${partieCounter}">
                            <div class="video-upload" onclick="document.getElementById('video-file-${partieCounter}').click()">
                                <input type="file" id="video-file-${partieCounter}" accept="video/*" 
                                       name="modules[${moduleId}][parties][${partieCounter}][video]" onchange="handleVideoUpload(${partieCounter}, this)">
                                <div>
                                    <div style="font-size: 3rem; margin-bottom: 1rem;">üé•</div>
                                    <div>Cliquez pour ajouter une vid√©o</div>
                                    <div style="font-size: 0.9rem; color: var(--text-light); margin-top: 0.5rem;">
                                        Formats support√©s: MP4, WebM, AVI (max 500MB)
                                    </div>
                                </div>
                            </div>
                            <div class="video-preview" id="video-preview-${partieCounter}" style="display: none; margin-top: 1rem;">
                                <!-- Aper√ßu vid√©o -->
                            </div>
                        </div>
                        
                        <!-- Contenu quiz -->
                        <div class="content-section" id="quiz-${partieCounter}" style="display: none;">
                            <div class="quiz-builder">
                                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                                    <h4>Quiz de la partie</h4>
                                    <button type="button" class="btn btn-success btn-small" onclick="ajouterQuestion(${partieCounter})">
                                        ‚ûï Ajouter une question
                                    </button>
                                </div>
                                <div class="questions-container" id="questions-${partieCounter}">
                                    <!-- Les questions seront ajout√©es ici -->
                                </div>
                            </div>
                        </div>
                        
                        <!-- Contenu document -->
                        <div class="content-section" id="document-${partieCounter}" style="display: none;">
                            <div class="form-group">
                                <label class="form-label">Documents t√©l√©chargeables</label>
                                <input type="file" class="form-input" multiple accept=".pdf,.doc,.docx,.ppt,.pptx" 
                                       name="modules[${moduleId}][parties][${partieCounter}][documents]" onchange="handleDocumentUpload(${partieCounter}, this)">
                                <div class="file-list" id="documents-${partieCounter}">
                                    <!-- Liste des documents -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            document.getElementById(`parties-${moduleId}`).insertAdjacentHTML('beforeend', partieHtml);
        }

        function ajouterQuestion(partieId) {
            questionCounter++;
            const questionHtml = `
                <div class="question-item" data-question-id="${questionCounter}">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h5>Question ${questionCounter}</h5>
                        <!-- ...tout le code existant au-dessus... -->
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h5>Question ${questionCounter}</h5>
                        <button type="button" class="btn btn-danger btn-small" onclick="supprimerQuestion(${questionCounter})">üóëÔ∏è</button>
                    </div>
                    <div class="form-group">
                        <label class="form-label required">Intitul√© de la question</label>
                        <input type="text" class="form-input" name="questions[${partieId}][${questionCounter}][intitule]" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Options de r√©ponse</label>
                        <div class="answer-options" id="answers-${questionCounter}">
                            <div class="answer-option">
                                <input type="checkbox" name="questions[${partieId}][${questionCounter}][reponses][0][correct]" value="true">
                                <input type="text" class="form-input" name="questions[${partieId}][${questionCounter}][reponses][0][texte]" placeholder="R√©ponse 1" required>
                            </div>
                            <div class="answer-option">
                                <input type="checkbox" name="questions[${partieId}][${questionCounter}][reponses][1][correct]" value="true">
                                <input type="text" class="form-input" name="questions[${partieId}][${questionCounter}][reponses][1][texte]" placeholder="R√©ponse 2" required>
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary btn-small" onclick="ajouterReponse(${questionCounter})">‚ûï Ajouter une option</button>
                    </div>
                </div>
            `;
            document.getElementById(`questions-${partieId}`).insertAdjacentHTML('beforeend', questionHtml);
        }

        function ajouterReponse(questionId) {
            const answersContainer = document.getElementById(`answers-${questionId}`);
            const index = answersContainer.querySelectorAll('.answer-option').length;
            const answerHtml = `
                <div class="answer-option">
                    <input type="checkbox" name="questions[][${questionId}][reponses][${index}][correct]" value="true">
                    <input type="text" class="form-input" name="questions[][${questionId}][reponses][${index}][texte]" placeholder="R√©ponse ${index + 1}" required>
                </div>
            `;
            answersContainer.insertAdjacentHTML('beforeend', answerHtml);
        }

        function supprimerModule(moduleId) {
            const module = document.querySelector(`.module-item[data-module-id="${moduleId}"]`);
            if (module) module.remove();
        }

        function supprimerPartie(partieId) {
            const partie = document.querySelector(`.partie-item[data-partie-id="${partieId}"]`);
            if (partie) partie.remove();
        }

        function supprimerQuestion(questionId) {
            const question = document.querySelector(`.question-item[data-question-id="${questionId}"]`);
            if (question) question.remove();
        }

        function toggleModule(moduleId) {
            const content = document.getElementById(`module-${moduleId}`);
            if (content) content.classList.toggle('expanded');
        }

        function togglePartie(partieId) {
            const content = document.getElementById(`partie-${partieId}`);
            if (content) content.classList.toggle('expanded');
        }

        function selectContentType(partieId, type) {
            ['video', 'quiz', 'document'].forEach(t => {
                const section = document.getElementById(`${t}-${partieId}`);
                if (section) section.style.display = (t === type) ? 'block' : 'none';
                const btn = document.querySelector(`.partie-item[data-partie-id="${partieId}"] .content-type-btn:nth-child(${['video','quiz','document'].indexOf(t)+1})`);
                if (btn) btn.classList.toggle('active', t === type);
            });
        }

        function handleVideoUpload(partieId, input) {
            const preview = document.getElementById(`video-preview-${partieId}`);
            if (input.files && input.files[0]) {
                const file = input.files[0];
                const url = URL.createObjectURL(file);
                preview.innerHTML = `<video src="${url}" controls style="max-width:100%;border-radius:8px;"></video>`;
                preview.style.display = 'block';
            } else {
                preview.innerHTML = '';
                preview.style.display = 'none';
            }
        }

        function handleDocumentUpload(partieId, input) {
            const list = document.getElementById(`documents-${partieId}`);
            list.innerHTML = '';
            Array.from(input.files).forEach(file => {
                const item = document.createElement('div');
                item.className = 'file-item';
                item.innerHTML = `<span>${file.name}</span>`;
                list.appendChild(item);
            });
        }

        function sauvegarderBrouillon() {
            alert('Fonction de sauvegarde en brouillon √† impl√©menter.');
        }

        function genererApercu() {
            // G√©n√®re un aper√ßu de la formation √† partir des champs remplis
            const titre = document.getElementById('titre').value;
            const description = document.getElementById('description').value;
            const domaine = document.getElementById('domaine').value;
            const niveau = document.getElementById('niveau').value;
            const modules = document.querySelectorAll('.module-item');
            let html = `<h2>${titre}</h2><p>${description}</p><p><strong>Domaine :</strong> ${domaine} | <strong>Niveau :</strong> ${niveau}</p>`;
            html += `<h3>Modules</h3><ul>`;
            modules.forEach(module => {
                const moduleTitle = module.querySelector('input[name*="[titre]"]').value;
                html += `<li>${moduleTitle}</li>`;
            });
            html += `</ul>`;
            document.getElementById('previewContent').innerHTML = html;
        }

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            // Optionnel : ajouter un module par d√©faut
            ajouterModule();
        });
    </script>
</body>
</html>